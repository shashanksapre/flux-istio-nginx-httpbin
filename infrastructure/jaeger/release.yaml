apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: jaeger
  namespace: istio-system
spec:
  releaseName: jaeger
  chart:
    spec:
      chart: ./charts/jaeger
      sourceRef:
        kind: GitRepository
        name: jaeger
        namespace: flux-system
  dependsOn:
  - name: istio-discovery
  interval: 5m
  values:
    provisionDataStore:
      cassandra: false
      elasticsearch: true
      kafka: true
    storage:
      type: elasticsearch
      elasticsearch:
        scheme: http
        host: elasticsearch-master
        port: 9200
        user: elastic
        usePassword: true
        password: changeme
        nodesWanOnly: false
        # extraEnv: []
        # cmdlineParams: {}
      kafka:
        brokers:
          - jaeger-kafka-headless:9092
        topic: jaeger_v1_test
        authentication: none
    agent:
      podAnnotations:
        sidecar.istio.io/inject: "false"
    collector:
      podAnnotations:
        sidecar.istio.io/inject: "false"
      service:
        zipkin:
          port: 9411
      ingress:
        enabled: false
        hosts:
        - jaeger-collector.local
        annotations:
          kubernetes.io/ingress.class: nginx
          kubernetes.io/tls-acme: "true"
    elasticsearch:
      podAnnotations:
        sidecar.istio.io/inject: "false"
      image: "docker.elastic.co/elasticsearch/elasticsearch"
      imageTag: "7.15.0"
      replicas: 1
      minimumMasterNodes: 1
      clusterHealthCheckParams: 'wait_for_status=yellow&timeout=1s'
    ingester:
      enabled: true
      podAnnotations:
        sidecar.istio.io/inject: "false"
    kafka:
      podAnnotations:
        sidecar.istio.io/inject: "false"
      replicaCount: 1
      autoCreateTopicsEnable: true
      zookeeper:
        replicaCount: 1
        serviceAccount:
          create: true
    query:
      podAnnotations:
        sidecar.istio.io/inject: "false"
      ingress:
        enabled: true
        hosts:
        - jaeger.local
        annotations:
          kubernetes.io/ingress.class: nginx
          kubernetes.io/tls-acme: "true"
      # extraEnv: